// <auto-generated />
using System;
using EY.UbbstractThinkers.ProjectManagementPortal.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EY.UbbstractThinkers.ProjectManagementPortal.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808114825_CreatedProjectForeignKeysToTemplateAndStage")]
    partial class CreatedProjectForeignKeysToTemplateAndStage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Project", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CurrentStageUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TemplateUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("CurrentStageUid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TemplateUid");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.ProjectResources", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectId", "UserId");

                    b.ToTable("ProjectResources");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.ProjectStakeholder", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectId", "UserId");

                    b.ToTable("ProjectStakeholders");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Stage", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("Uid");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Template", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Uid");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("TemplateStages", b =>
                {
                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StageId", "TemplateId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateStages");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Project", b =>
                {
                    b.HasOne("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Stage", "CurrentStage")
                        .WithMany("Projects")
                        .HasForeignKey("CurrentStageUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Template", "Template")
                        .WithMany("Projects")
                        .HasForeignKey("TemplateUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStage");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.ProjectResources", b =>
                {
                    b.HasOne("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Project", null)
                        .WithMany("Resources")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.ProjectStakeholder", b =>
                {
                    b.HasOne("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Project", null)
                        .WithMany("Stakeholders")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TemplateStages", b =>
                {
                    b.HasOne("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Stage", null)
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Template", null)
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Project", b =>
                {
                    b.Navigation("Resources");

                    b.Navigation("Stakeholders");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Stage", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EY.UbbstractThinkers.ProjectManagementPortal.Server.Models.Template", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
